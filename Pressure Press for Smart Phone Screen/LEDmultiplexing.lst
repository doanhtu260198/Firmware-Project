C51 COMPILER V9.52.0.0   LEDMULTIPLEXING                                                   07/15/2021 17:28:53 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE LEDMULTIPLEXING
OBJECT MODULE PLACED IN LEDmultiplexing.obj
COMPILER INVOKED BY: E:\DTVT program\KEIL C 5 8051\C51\BIN\C51.EXE scr\LEDmultiplexing.c BROWSE INCDIR(.\inc) DEBUG OBJE
                    -CTEXTEND PRINT(.\LEDmultiplexing.lst) TABS(2) OBJECT(LEDmultiplexing.obj)

line level    source

   1          #include "SC92F732x_C.H"
   2          #include "LEDmultiplexing.h"
   3          //----------------------------------------------------------------------------------------------
   4          //********************************************EXTERN********************************************
   5          
   6          //----------------------------------------------------------------------------------------------
   7          //********************************************DEFINE********************************************
   8          
   9          //----------------------------------------------------------------------------------------------
  10          //******************************************PROTOTYPE*******************************************
  11          extern void delay_us(int time);
  12          extern void delay_ms(int time);
  13          //----------------------------------------------------------------------------------------------
  14          //*******************************************VARIABLE*******************************************
  15          extern unsigned char Display_number[8];
  16          extern unsigned char codeLed[12]; // 0-9 code P00-P06
  17          extern char multiplexCode[8];           // multilex code P20-P27
  18          
  19          extern char temp_set  ;
  20          extern char temp_real ;
  21          extern char time_AC  ;
  22          extern char time_DC   ;
  23          
  24          extern unsigned char time_run_AC;               // Running time
  25          extern unsigned char time_run_DC;               // Running time
  26          //----------------------------------------------------------------------------------------------
  27          //*******************************************STRUCT*********************************************
  28          
  29          //----------------------------------------------------------------------------------------------
  30          //******************************************FUNCTION********************************************
  31          //----------------------------------------------------------------------------------------------
  32          //Split number to display 7segments-led
  33          /*param: - Number: number to split
  34                   - Lednum: number of digit will split
  35                   - displayNum[8]: array to store splitting number
  36          */
  37          void splitNumber(){//unsigned long Number,unsigned int Lednum,unsigned char displayNum[8]){
  38   1      //  int i;
  39   1      //  for(i=0;i<Lednum;i++){
  40   1      //    displayNum[i]=Number%10;
  41   1      //    Number=Number/10;
  42   1      //  }
  43   1            Display_number[7]=temp_real/10;
  44   1            Display_number[6]=temp_real%10;
  45   1        
  46   1            Display_number[5]=time_AC/10;
  47   1            Display_number[4]=time_AC%10;
  48   1        
  49   1            Display_number[3]=temp_set/10;
  50   1            Display_number[2]=temp_set%10;
  51   1        
  52   1            Display_number[1]=time_DC/10;
  53   1            Display_number[0]=time_DC%10;
  54   1        
C51 COMPILER V9.52.0.0   LEDMULTIPLEXING                                                   07/15/2021 17:28:53 PAGE 2   

  55   1      }
  56          
  57          
  58          //Split number to display 7segments-led
  59          /*param: - Number: number to split
  60                   - Lednum: number of digit will split
  61                   - displayNum[8]: array to store splitting number
  62          */
  63          void splitNumberRunTime(){
  64   1            Display_number[7]=temp_real/10;
  65   1            Display_number[6]=temp_real%10;
  66   1        
  67   1            Display_number[5]=time_run_AC/10;
  68   1            Display_number[4]=time_run_AC%10;
  69   1        
  70   1            Display_number[3]=temp_set/10;
  71   1            Display_number[2]=temp_set%10;
  72   1        
  73   1            Display_number[1]=time_run_DC/10;
  74   1            Display_number[0]=time_run_DC%10;
  75   1        
  76   1      }
  77          
  78          
  79          //----------------------------------------------------------------------------------------------
  80          //Multiplexing to display 7segments-led
  81          /*param: - Lednum: number of led to display
  82                   - Multiplex_time: number of multiplexing time
  83          */
  84          void Multiplex_Display(unsigned char Lednum, unsigned char Multiplex_time,char display[8]){
  85   1      char i,j;
  86   1        for(i=0;i<Multiplex_time;i++){
  87   2          for(j=0;j<Lednum;j++){
  88   3            P2 = multiplexCode[7-j];              //bat led duoc phep hien thi
  89   3            P0 = codeLed[display[j]];   //mang chua con so can hien thi
  90   3            delay_ms(1);
  91   3            P2 = 0x00;
  92   3          }
  93   2        }
  94   1      }
  95          
  96          
  97          //void splitNumberTest(unsigned long Number,unsigned char Lednum,unsigned char displayNum[8],char i){
  98          //  //int i;
  99          //  for(i=0;i<Lednum;i++){
 100          //    displayNum[i]=Number%10;
 101          //    Number=Number/10;
 102          //  }
 103          //}


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    269    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       7
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
